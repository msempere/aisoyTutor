#ifndef PERFORMANCEMANAGER_H_
#define PERFORMANCEMANAGER_H_

#include <boost/function.hpp>
#include <boost/thread.hpp>

#include <iostream>
#include <sstream>
#include <string>
#include <cstdlib>
#include <ctime>
#include <aisoy1/bot.h>
#include <aisoy1/log.h>
#include <exception>

using namespace std;

class PerformanceManager{
  
  public:
    virtual void do_not_instantiate() = 0;
    
    static void Run();
    static void Start();
    static void SetPerformance(boost::function<void(bool *)> _f);
    static void Stop();
    static void StopAnimation();
    static void Sleep(float t);
  private:
    static bool running;
    static volatile bool stopThread;
    static boost::function<void(bool *)> f;
    static boost::thread t;
};

class PerformanceManager_exception : public exception{
  
  public:
    PerformanceManager_exception();
    const char* what() const throw();
};

#endif
